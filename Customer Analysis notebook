{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2549419,"sourceType":"datasetVersion","datasetId":1546318}],"dockerImageVersionId":30129,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2021-10-10T08:46:24.526401Z","iopub.execute_input":"2021-10-10T08:46:24.527555Z","iopub.status.idle":"2021-10-10T08:46:24.696768Z","shell.execute_reply.started":"2021-10-10T08:46:24.527428Z","shell.execute_reply":"2021-10-10T08:46:24.695719Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<center> <img src=\"https://blog-assets.freshworks.com/freshdesk/wp-content/uploads/2020/06/18152022/Blog_Banner_v1-01-1024x410.jpg\"> </center>","metadata":{}},{"cell_type":"markdown","source":"### About Dataset","metadata":{}},{"cell_type":"markdown","source":"#### Context\n\n**Problem Statement**\n\nCustomer Personality Analysis is a detailed analysis of a company’s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers. \n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company’s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\n\n#### Content\n\n**Attributes**\n\n**People**\n\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\n**Products**\n\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\n**Promotion**\n\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n**Place**\n\n* NumWebPurchases: Number of purchases made through the company’s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company’s web site in the last month\n\n#### Target\n\nNeed to perform clustering to summarize customer segments.","metadata":{}},{"cell_type":"code","source":"# Importing all the necessary libraries\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:24.701853Z","iopub.execute_input":"2021-10-10T08:46:24.704216Z","iopub.status.idle":"2021-10-10T08:46:27.754674Z","shell.execute_reply.started":"2021-10-10T08:46:24.704148Z","shell.execute_reply":"2021-10-10T08:46:27.753966Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Reading and making a copy of the dataset\n\nmain_df = pd.read_csv(\"/kaggle/input/customer-personality-analysis/marketing_campaign.csv\", sep=\"\\t\")\ndf = main_df.copy()\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:27.756835Z","iopub.execute_input":"2021-10-10T08:46:27.757396Z","iopub.status.idle":"2021-10-10T08:46:27.940647Z","shell.execute_reply.started":"2021-10-10T08:46:27.757355Z","shell.execute_reply":"2021-10-10T08:46:27.939799Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### EDA","metadata":{}},{"cell_type":"code","source":"# Checking the shape of the dataset\n\ndf.shape","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:27.94202Z","iopub.execute_input":"2021-10-10T08:46:27.942536Z","iopub.status.idle":"2021-10-10T08:46:27.948141Z","shell.execute_reply.started":"2021-10-10T08:46:27.942496Z","shell.execute_reply":"2021-10-10T08:46:27.94721Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Finding the basic information regarding dataset\n\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:27.951193Z","iopub.execute_input":"2021-10-10T08:46:27.951506Z","iopub.status.idle":"2021-10-10T08:46:27.988824Z","shell.execute_reply.started":"2021-10-10T08:46:27.95147Z","shell.execute_reply":"2021-10-10T08:46:27.987884Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* Here we have only 3 object type datatype and rest are numerical.","metadata":{}},{"cell_type":"code","source":"# Finding the number of unique values present in each column\n\ndf.nunique()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:27.990358Z","iopub.execute_input":"2021-10-10T08:46:27.990695Z","iopub.status.idle":"2021-10-10T08:46:28.028505Z","shell.execute_reply.started":"2021-10-10T08:46:27.990654Z","shell.execute_reply":"2021-10-10T08:46:28.027256Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**NOTE** \n* In above cell \"Z_CostContact\" and \"Z_Revenue\" have same value in all the rows that's why they are not going to contribute anything in the model building. So we can drop them.  ","metadata":{}},{"cell_type":"code","source":"# Checking if any NaN is present in column or not\n\ndf.isna().any()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:28.032339Z","iopub.execute_input":"2021-10-10T08:46:28.034436Z","iopub.status.idle":"2021-10-10T08:46:28.048898Z","shell.execute_reply.started":"2021-10-10T08:46:28.034377Z","shell.execute_reply":"2021-10-10T08:46:28.048215Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* Income column have some missing value in it so we will need to fill it by by either mean or median.","metadata":{}},{"cell_type":"code","source":"# Checking for null value using heatmap\n\nsns.heatmap(df.isnull())","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:28.050472Z","iopub.execute_input":"2021-10-10T08:46:28.053244Z","iopub.status.idle":"2021-10-10T08:46:28.925172Z","shell.execute_reply.started":"2021-10-10T08:46:28.053201Z","shell.execute_reply":"2021-10-10T08:46:28.923496Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Dropping columns because they will not contribute anything in model building\n\ndf=df.drop(columns=[\"Z_CostContact\", \"Z_Revenue\"],axis=1)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:28.926233Z","iopub.execute_input":"2021-10-10T08:46:28.926732Z","iopub.status.idle":"2021-10-10T08:46:28.962287Z","shell.execute_reply.started":"2021-10-10T08:46:28.926694Z","shell.execute_reply":"2021-10-10T08:46:28.960015Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Finding the correlation between the feature column\n\nplt.figure(figsize=(20,20))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:28.965095Z","iopub.execute_input":"2021-10-10T08:46:28.966243Z","iopub.status.idle":"2021-10-10T08:46:31.65072Z","shell.execute_reply.started":"2021-10-10T08:46:28.966204Z","shell.execute_reply":"2021-10-10T08:46:31.646631Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* No two columns are too much correlated with each other so we can't drop any column on the basis of correlation.","metadata":{}},{"cell_type":"code","source":"# Checking for correlation by unstacking data\n\ncorr = df.corr()\nc1 = corr.abs().unstack()\nc1.sort_values(ascending = False)[24:50:2]","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.652149Z","iopub.execute_input":"2021-10-10T08:46:31.652655Z","iopub.status.idle":"2021-10-10T08:46:31.671587Z","shell.execute_reply.started":"2021-10-10T08:46:31.652603Z","shell.execute_reply":"2021-10-10T08:46:31.670783Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* It is used to calculate how one variable is correlated/ dependent on other variable.\n* Extreme values signify high correlation.\n* Multicollinear variables with correlation more than a threshold are usually dropped from the dataset.","metadata":{}},{"cell_type":"markdown","source":"### Preprocessing of the dataset","metadata":{}},{"cell_type":"code","source":"# Filling the missing value in the income my mean\n\ndf['Income'] = df['Income'].fillna(df['Income'].mean())\ndf.isna().any() ","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.673254Z","iopub.execute_input":"2021-10-10T08:46:31.673548Z","iopub.status.idle":"2021-10-10T08:46:31.685297Z","shell.execute_reply.started":"2021-10-10T08:46:31.673511Z","shell.execute_reply":"2021-10-10T08:46:31.68462Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.687054Z","iopub.execute_input":"2021-10-10T08:46:31.687554Z","iopub.status.idle":"2021-10-10T08:46:31.712371Z","shell.execute_reply.started":"2021-10-10T08:46:31.687518Z","shell.execute_reply":"2021-10-10T08:46:31.711643Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking number of unique categories present in the \"Marital_Status\"\n\ndf['Marital_Status'].value_counts()  ","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.716261Z","iopub.execute_input":"2021-10-10T08:46:31.71654Z","iopub.status.idle":"2021-10-10T08:46:31.724103Z","shell.execute_reply.started":"2021-10-10T08:46:31.716502Z","shell.execute_reply":"2021-10-10T08:46:31.723412Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Marital_Status'] = df['Marital_Status'].replace(['Married', 'Together'],'relationship')\ndf['Marital_Status'] = df['Marital_Status'].replace(['Divorced', 'Widow', 'Alone', 'YOLO', 'Absurd'],'Single')","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.725408Z","iopub.execute_input":"2021-10-10T08:46:31.726292Z","iopub.status.idle":"2021-10-10T08:46:31.737083Z","shell.execute_reply.started":"2021-10-10T08:46:31.726253Z","shell.execute_reply":"2021-10-10T08:46:31.73628Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* In the above cell we are grouping 'Married', 'Together' as \"relationship\" \n* Whereas 'Divorced', 'Widow', 'Alone', 'YOLO', 'Absurd' as \"Single\"","metadata":{}},{"cell_type":"code","source":"# Count of different values present in Marital_Status\n\ndf['Marital_Status'].value_counts()  ","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.738431Z","iopub.execute_input":"2021-10-10T08:46:31.739253Z","iopub.status.idle":"2021-10-10T08:46:31.747391Z","shell.execute_reply.started":"2021-10-10T08:46:31.739215Z","shell.execute_reply":"2021-10-10T08:46:31.746552Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Combining different dataframe into a single column to reduce the number of dimension\n\ndf['Kids'] = df['Kidhome'] + df['Teenhome']\ndf['Expenses'] = df['MntWines'] + df['MntFruits'] + df['MntMeatProducts'] + df['MntFishProducts'] + df['MntSweetProducts'] + df['MntGoldProds']\ndf['TotalAcceptedCmp'] = df['AcceptedCmp1'] + df['AcceptedCmp2'] + df['AcceptedCmp3'] + df['AcceptedCmp4'] + df['AcceptedCmp5'] + df['Response']\ndf['NumTotalPurchases'] = df['NumWebPurchases'] + df['NumCatalogPurchases'] + df['NumStorePurchases'] + df['NumDealsPurchases']","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.748967Z","iopub.execute_input":"2021-10-10T08:46:31.74942Z","iopub.status.idle":"2021-10-10T08:46:31.773152Z","shell.execute_reply.started":"2021-10-10T08:46:31.749372Z","shell.execute_reply":"2021-10-10T08:46:31.772446Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Deleting some column to reduce dimension and complexity of model\n\ncol_del = [\"AcceptedCmp1\" , \"AcceptedCmp2\", \"AcceptedCmp3\" , \"AcceptedCmp4\",\"AcceptedCmp5\", \"Response\",\"NumWebVisitsMonth\", \"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\",\"NumDealsPurchases\" , \"Kidhome\", \"Teenhome\",\"MntWines\", \"MntFruits\", \"MntMeatProducts\", \"MntFishProducts\", \"MntSweetProducts\", \"MntGoldProds\"]\ndf=df.drop(columns=col_del,axis=1)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.774346Z","iopub.execute_input":"2021-10-10T08:46:31.774667Z","iopub.status.idle":"2021-10-10T08:46:31.792626Z","shell.execute_reply.started":"2021-10-10T08:46:31.774632Z","shell.execute_reply":"2021-10-10T08:46:31.791932Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Adding a column \"Age\" in the dataframe\n\ndf['Age'] = 2015 - df[\"Year_Birth\"]","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.794117Z","iopub.execute_input":"2021-10-10T08:46:31.794594Z","iopub.status.idle":"2021-10-10T08:46:31.800599Z","shell.execute_reply.started":"2021-10-10T08:46:31.794557Z","shell.execute_reply":"2021-10-10T08:46:31.799835Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Education'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.801653Z","iopub.execute_input":"2021-10-10T08:46:31.80222Z","iopub.status.idle":"2021-10-10T08:46:31.811775Z","shell.execute_reply.started":"2021-10-10T08:46:31.802183Z","shell.execute_reply":"2021-10-10T08:46:31.811125Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Changing category into UG and PG only\n\ndf['Education'] = df['Education'].replace(['PhD','2n Cycle','Graduation', 'Master'],'PG')  \ndf['Education'] = df['Education'].replace(['Basic'], 'UG')","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.814281Z","iopub.execute_input":"2021-10-10T08:46:31.814486Z","iopub.status.idle":"2021-10-10T08:46:31.821442Z","shell.execute_reply.started":"2021-10-10T08:46:31.814466Z","shell.execute_reply":"2021-10-10T08:46:31.820725Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of days a customer was engaged with company\n\n# Changing Dt_customer into timestamp format\ndf['Dt_Customer'] = pd.to_datetime(df.Dt_Customer)\ndf['first_day'] = '01-01-2015'\ndf['first_day'] = pd.to_datetime(df.first_day)\ndf['day_engaged'] = (df['first_day'] - df['Dt_Customer']).dt.days","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.82297Z","iopub.execute_input":"2021-10-10T08:46:31.823482Z","iopub.status.idle":"2021-10-10T08:46:31.839238Z","shell.execute_reply.started":"2021-10-10T08:46:31.823417Z","shell.execute_reply":"2021-10-10T08:46:31.838504Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df=df.drop(columns=[\"ID\", \"Dt_Customer\", \"first_day\", \"Year_Birth\", \"Dt_Customer\", \"Recency\", \"Complain\"],axis=1)\ndf.shape","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.840673Z","iopub.execute_input":"2021-10-10T08:46:31.840972Z","iopub.status.idle":"2021-10-10T08:46:31.851868Z","shell.execute_reply.started":"2021-10-10T08:46:31.840934Z","shell.execute_reply":"2021-10-10T08:46:31.851058Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Visualization","metadata":{}},{"cell_type":"code","source":"fig = px.bar(df, x='Marital_Status', y='Expenses', color=\"Education\")\nfig.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:31.853714Z","iopub.execute_input":"2021-10-10T08:46:31.853999Z","iopub.status.idle":"2021-10-10T08:46:32.690136Z","shell.execute_reply.started":"2021-10-10T08:46:31.853965Z","shell.execute_reply":"2021-10-10T08:46:32.689359Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = px.bar(df, x='Marital_Status', y='Expenses', color=\"Marital_Status\")\nfig.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:32.691548Z","iopub.execute_input":"2021-10-10T08:46:32.691803Z","iopub.status.idle":"2021-10-10T08:46:32.945897Z","shell.execute_reply.started":"2021-10-10T08:46:32.69177Z","shell.execute_reply":"2021-10-10T08:46:32.945078Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Less number of single customer**","metadata":{}},{"cell_type":"code","source":"fig = px.histogram (df, x = \"Expenses\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:32.947313Z","iopub.execute_input":"2021-10-10T08:46:32.947644Z","iopub.status.idle":"2021-10-10T08:46:33.089262Z","shell.execute_reply.started":"2021-10-10T08:46:32.947605Z","shell.execute_reply":"2021-10-10T08:46:33.088549Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = px.histogram (df, x = \"Expenses\",  facet_row = \"Education\",  template = 'plotly_dark')\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.09216Z","iopub.execute_input":"2021-10-10T08:46:33.092362Z","iopub.status.idle":"2021-10-10T08:46:33.177343Z","shell.execute_reply.started":"2021-10-10T08:46:33.092339Z","shell.execute_reply":"2021-10-10T08:46:33.175394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = px.histogram (df, x = \"NumTotalPurchases\",  facet_row = \"Education\",  template = 'plotly_dark')\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.178876Z","iopub.execute_input":"2021-10-10T08:46:33.179169Z","iopub.status.idle":"2021-10-10T08:46:33.264536Z","shell.execute_reply.started":"2021-10-10T08:46:33.179135Z","shell.execute_reply":"2021-10-10T08:46:33.263607Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = px.histogram (df, x = \"Age\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.265855Z","iopub.execute_input":"2021-10-10T08:46:33.266199Z","iopub.status.idle":"2021-10-10T08:46:33.349438Z","shell.execute_reply.started":"2021-10-10T08:46:33.266163Z","shell.execute_reply":"2021-10-10T08:46:33.348598Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = px.histogram (df, x = \"Income\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.350972Z","iopub.execute_input":"2021-10-10T08:46:33.351221Z","iopub.status.idle":"2021-10-10T08:46:33.438957Z","shell.execute_reply.started":"2021-10-10T08:46:33.351187Z","shell.execute_reply":"2021-10-10T08:46:33.438113Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig =  px.pie (df, names = \"Marital_Status\", hole = 0.4, template = \"gridon\")\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.440507Z","iopub.execute_input":"2021-10-10T08:46:33.440821Z","iopub.status.idle":"2021-10-10T08:46:33.493323Z","shell.execute_reply.started":"2021-10-10T08:46:33.440786Z","shell.execute_reply":"2021-10-10T08:46:33.492635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**35% of the customer are single whereas more 64% are in relationship.**","metadata":{}},{"cell_type":"code","source":"fig =  px.pie (df, names = \"Education\", hole = 0.4, template = \"plotly_dark\")\nfig.show ()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.494749Z","iopub.execute_input":"2021-10-10T08:46:33.495206Z","iopub.status.idle":"2021-10-10T08:46:33.549088Z","shell.execute_reply.started":"2021-10-10T08:46:33.495167Z","shell.execute_reply":"2021-10-10T08:46:33.548214Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"** More than 97% customer are from PG background. and Approx. 2% are from UG.","metadata":{}},{"cell_type":"code","source":"sns.barplot(x = df['Expenses'],y = df['Education']);\nplt.title('Total Expense based on the Education Level');","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.550617Z","iopub.execute_input":"2021-10-10T08:46:33.550897Z","iopub.status.idle":"2021-10-10T08:46:33.802664Z","shell.execute_reply.started":"2021-10-10T08:46:33.550861Z","shell.execute_reply":"2021-10-10T08:46:33.801858Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.barplot(x = df['Income'],y = df['Education']);\nplt.title('Total Income based on the Education Level');","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:33.803988Z","iopub.execute_input":"2021-10-10T08:46:33.804237Z","iopub.status.idle":"2021-10-10T08:46:34.045648Z","shell.execute_reply.started":"2021-10-10T08:46:33.804207Z","shell.execute_reply":"2021-10-10T08:46:34.044954Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.04699Z","iopub.execute_input":"2021-10-10T08:46:34.047478Z","iopub.status.idle":"2021-10-10T08:46:34.080938Z","shell.execute_reply.started":"2021-10-10T08:46:34.047438Z","shell.execute_reply":"2021-10-10T08:46:34.080216Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.heatmap(df.corr(), annot=True)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.08207Z","iopub.execute_input":"2021-10-10T08:46:34.082702Z","iopub.status.idle":"2021-10-10T08:46:34.631677Z","shell.execute_reply.started":"2021-10-10T08:46:34.082665Z","shell.execute_reply":"2021-10-10T08:46:34.630952Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cate = []\nfor i in df.columns:\n    if (df[i].dtypes == \"object\"):\n        cate.append(i)\n\nprint(cate)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.633016Z","iopub.execute_input":"2021-10-10T08:46:34.633332Z","iopub.status.idle":"2021-10-10T08:46:34.639519Z","shell.execute_reply.started":"2021-10-10T08:46:34.633295Z","shell.execute_reply":"2021-10-10T08:46:34.638825Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.640615Z","iopub.execute_input":"2021-10-10T08:46:34.641265Z","iopub.status.idle":"2021-10-10T08:46:34.647728Z","shell.execute_reply.started":"2021-10-10T08:46:34.641224Z","shell.execute_reply":"2021-10-10T08:46:34.647003Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Marital_Status'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.64902Z","iopub.execute_input":"2021-10-10T08:46:34.649766Z","iopub.status.idle":"2021-10-10T08:46:34.660076Z","shell.execute_reply.started":"2021-10-10T08:46:34.64973Z","shell.execute_reply":"2021-10-10T08:46:34.659286Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Label Encoding","metadata":{}},{"cell_type":"code","source":"lbl_encode = LabelEncoder()\nfor i in cate:\n    df[i]=df[[i]].apply(lbl_encode.fit_transform)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.661365Z","iopub.execute_input":"2021-10-10T08:46:34.661697Z","iopub.status.idle":"2021-10-10T08:46:34.674262Z","shell.execute_reply.started":"2021-10-10T08:46:34.661662Z","shell.execute_reply":"2021-10-10T08:46:34.673447Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df1 = df.copy()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.679844Z","iopub.execute_input":"2021-10-10T08:46:34.680073Z","iopub.status.idle":"2021-10-10T08:46:34.684388Z","shell.execute_reply.started":"2021-10-10T08:46:34.680048Z","shell.execute_reply":"2021-10-10T08:46:34.683518Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Standardization ","metadata":{}},{"cell_type":"code","source":"scaled_features = StandardScaler().fit_transform(df1.values)\nscaled_features_df = pd.DataFrame(scaled_features, index=df1.index, columns=df1.columns)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.685851Z","iopub.execute_input":"2021-10-10T08:46:34.686628Z","iopub.status.idle":"2021-10-10T08:46:34.695471Z","shell.execute_reply.started":"2021-10-10T08:46:34.686588Z","shell.execute_reply":"2021-10-10T08:46:34.694485Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"scaled_features_df.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.697236Z","iopub.execute_input":"2021-10-10T08:46:34.697548Z","iopub.status.idle":"2021-10-10T08:46:34.715921Z","shell.execute_reply.started":"2021-10-10T08:46:34.697499Z","shell.execute_reply":"2021-10-10T08:46:34.714963Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Elbow Method ","metadata":{}},{"cell_type":"code","source":"from sklearn.cluster import KMeans","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.718652Z","iopub.execute_input":"2021-10-10T08:46:34.719036Z","iopub.status.idle":"2021-10-10T08:46:34.772344Z","shell.execute_reply.started":"2021-10-10T08:46:34.718998Z","shell.execute_reply":"2021-10-10T08:46:34.771629Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wcss=[]\nfor i in range (1,11):\n kmeans=KMeans(n_clusters=i,init='k-means++',random_state=42)\n kmeans.fit(scaled_features_df)\n wcss.append(kmeans.inertia_)\nplt.figure(figsize=(16,8))\nplt.plot(range(1,11),wcss, 'bx-')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:34.773643Z","iopub.execute_input":"2021-10-10T08:46:34.773892Z","iopub.status.idle":"2021-10-10T08:46:38.318861Z","shell.execute_reply.started":"2021-10-10T08:46:34.773859Z","shell.execute_reply":"2021-10-10T08:46:38.318199Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**As it is not very clear from the elbow method that which value of K to choose.**","metadata":{}},{"cell_type":"markdown","source":"### Silhouette Score","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import silhouette_score ","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:38.32217Z","iopub.execute_input":"2021-10-10T08:46:38.322968Z","iopub.status.idle":"2021-10-10T08:46:38.327448Z","shell.execute_reply.started":"2021-10-10T08:46:38.322923Z","shell.execute_reply":"2021-10-10T08:46:38.32669Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\nsilhouette_scores = []\nfor i in range(2,10):\n    m1=KMeans(n_clusters=i, random_state=42)\n    c = m1.fit_predict(scaled_features_df)\n    silhouette_scores.append(silhouette_score(scaled_features_df, m1.fit_predict(scaled_features_df))) \nplt.bar(range(2,10), silhouette_scores) \nplt.xlabel('Number of clusters', fontsize = 20) \nplt.ylabel('S(i)', fontsize = 20) \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:38.328952Z","iopub.execute_input":"2021-10-10T08:46:38.32943Z","iopub.status.idle":"2021-10-10T08:46:43.49381Z","shell.execute_reply.started":"2021-10-10T08:46:38.329379Z","shell.execute_reply":"2021-10-10T08:46:43.493022Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Here we are using Silhouette score to measure the value of K**","metadata":{}},{"cell_type":"code","source":"silhouette_scores","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.495028Z","iopub.execute_input":"2021-10-10T08:46:43.495285Z","iopub.status.idle":"2021-10-10T08:46:43.501969Z","shell.execute_reply.started":"2021-10-10T08:46:43.495251Z","shell.execute_reply":"2021-10-10T08:46:43.50094Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Getting the maximum value of silhouette score and adding 2 in index because index starts from 2.\n\nsc=max(silhouette_scores)\nnumber_of_clusters=silhouette_scores.index(sc)+2\nprint(\"Number of Cluster Required is : \", number_of_clusters)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.503991Z","iopub.execute_input":"2021-10-10T08:46:43.504291Z","iopub.status.idle":"2021-10-10T08:46:43.514536Z","shell.execute_reply.started":"2021-10-10T08:46:43.504263Z","shell.execute_reply":"2021-10-10T08:46:43.51383Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Model Building","metadata":{}},{"cell_type":"code","source":"# Training a predicting using K-Means Algorithm.\n\nkmeans=KMeans(n_clusters=number_of_clusters, random_state=42).fit(scaled_features_df)\npred=kmeans.predict(scaled_features_df)\n\n\n# Appending those cluster value into main dataframe (without standard-scalar)\n\ndf['cluster'] = pred + 1","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.516065Z","iopub.execute_input":"2021-10-10T08:46:43.516554Z","iopub.status.idle":"2021-10-10T08:46:43.716777Z","shell.execute_reply.started":"2021-10-10T08:46:43.516522Z","shell.execute_reply":"2021-10-10T08:46:43.715959Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.717876Z","iopub.execute_input":"2021-10-10T08:46:43.718164Z","iopub.status.idle":"2021-10-10T08:46:43.744557Z","shell.execute_reply.started":"2021-10-10T08:46:43.718128Z","shell.execute_reply":"2021-10-10T08:46:43.743303Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"scaled_features_df.head()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.745784Z","iopub.execute_input":"2021-10-10T08:46:43.746192Z","iopub.status.idle":"2021-10-10T08:46:43.774201Z","shell.execute_reply.started":"2021-10-10T08:46:43.746145Z","shell.execute_reply":"2021-10-10T08:46:43.773501Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Education'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.775325Z","iopub.execute_input":"2021-10-10T08:46:43.776765Z","iopub.status.idle":"2021-10-10T08:46:43.788668Z","shell.execute_reply.started":"2021-10-10T08:46:43.776726Z","shell.execute_reply":"2021-10-10T08:46:43.787985Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* 0 means PG and 1 means UG\n* There are very less customer from UG background","metadata":{}},{"cell_type":"markdown","source":"### Clustering ","metadata":{}},{"cell_type":"code","source":"pl = sns.countplot(x=df[\"cluster\"])\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:43.789685Z","iopub.execute_input":"2021-10-10T08:46:43.790357Z","iopub.status.idle":"2021-10-10T08:46:43.99673Z","shell.execute_reply.started":"2021-10-10T08:46:43.790323Z","shell.execute_reply":"2021-10-10T08:46:43.996044Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Note :-**\n\n**As we can see here that weightage of customer are more in cluster 1 as compare to other.**","metadata":{}},{"cell_type":"code","source":"# Clusters interpretation \nsns.set(rc={'axes.facecolor':'black', 'figure.facecolor':'black', 'axes.grid' : False, 'font.family': 'Ubuntu'})\n\nfor i in df:\n    diag = sns.FacetGrid(df, col = \"cluster\", hue = \"cluster\", palette = \"Set1\")\n    diag.map(plt.hist, i, bins=6, ec=\"k\") \n    diag.set_xticklabels(rotation=25, color = 'white')\n    diag.set_yticklabels(color = 'white')\n    diag.set_xlabels(size=16, color = 'white')\n    diag.set_titles(size=16, color = '#f01132', fontweight=\"bold\")\n    diag.fig.set_figheight(6)","metadata":{"execution":{"iopub.status.busy":"2021-10-10T08:46:44.000037Z","iopub.execute_input":"2021-10-10T08:46:44.001537Z","iopub.status.idle":"2021-10-10T08:46:51.637301Z","shell.execute_reply.started":"2021-10-10T08:46:44.001498Z","shell.execute_reply":"2021-10-10T08:46:51.636372Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Report ","metadata":{}},{"cell_type":"markdown","source":"#### Based on above information we can divide customer into 3 parts:- \n\n1. **Highly Active Customer** :- These customers belong to cluster one.\n2. **Moderately Active Customer** :- These customers belong to cluster two.\n3. **Least Active Customer** :-  These customers belong to cluster third.","metadata":{}},{"cell_type":"markdown","source":"#### Characteristics of Highly Active Customer\n\n- **In terms of Education**\n - Highly Active Customer are from PG background\n\n\n- **In terms of Marital_status**\n - Number of people in relationship are approx. two times of single people\n\n\n- **In terms of Income**\n - Income of Highly active customer are little less as compare to Moderately active customer.\n \n \n- **In terms of Kids**\n - Highly active customer have more number of children as compare to other customer ( avg. of 1 child ).\n \n \n- **In terms of Expenses**\n - Expenses of Highly Active customer are less as compare to moderate.\n - These customer spent avg. of approx. 100-200 unit money.\n\n\n- **In terms of Age**\n - Age of these customer are between 25 to 75.\n - Maximum customer age are between 40 to 50.\n\n\n- **In terms of day_engaged**\n - Highly Active customer are more loyal as they engaged with company for longer period of time.","metadata":{}},{"cell_type":"markdown","source":"#### Characteristics of Moderately Active Customer\n\n- **In terms of Education**\n - Moderately Active Customer are also from PG backgroud\n\n\n- **In terms of Marital_status**\n - Number of people in relationship are slightly more as compare to single people\n\n\n- **In terms of Income**\n - Income of Moderately active customer are higher as compare to other customer.\n\n\n- **In terms of Kids**\n - Moderately active customer have less number of childern as compare to highly active customer ( Max. customer has no child ).\n\n\n- **In terms of Expenses**\n - Expenses of Moderately Active customer are more as compare to Active.\n - These customer spent avg. of approx. 500-2000 unit money.\n\n\n- **In terms of Age**\n - Age of these customer are between 25 to 75.\n - Maximum customer age are between 35 to 60.\n\n\n- **In terms of day_engaged**\n - Moderately Active customer are slightly less engaged with company as compare to Highly Active Customer.\n ","metadata":{}},{"cell_type":"markdown","source":"#### Characteristics of Least Active Customer\n\n- **In terms of Education**\n - Least Active Customer are from UG backgroud\n\n    \n- **In terms of Marital_status**\n - Number of people in relationship are approx. equal to single people\n\n- **In terms of Income**\n - Income of Least active customer are very less or say negligible.\n    \n- **In terms of Kids**\n - Only few of these customer have child.\n\n- **In terms of Expenses**\n - Expenses of Least Active customer are very less or say negligible.\n\n\n- **In terms of Age**\n - Age of these customer are between 15 to 30.\n\n\n- **In terms of day_engaged**\n - Least Active customer are not much enrolled with company for longer time.","metadata":{"execution":{"iopub.status.busy":"2021-10-10T07:05:25.265843Z","iopub.execute_input":"2021-10-10T07:05:25.266644Z","iopub.status.idle":"2021-10-10T07:05:25.273545Z","shell.execute_reply.started":"2021-10-10T07:05:25.266598Z","shell.execute_reply":"2021-10-10T07:05:25.272501Z"}}}]}